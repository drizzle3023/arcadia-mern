{"version":3,"sources":["containers/navs/Breadcrumb.js","components/CustomPagination.js","containers/ui/SiteListTableCards.js","views/app/site-audit/site-list.js"],"names":["getMenuTitle","sub","id","getUrl","path","index","split","BreadcrumbItems","match","substr","paths","length","indexOf","filter","x","className","map","key","active","to","BreadcrumbContainer","heading","CustomPagination","props","filterPages","visiblePages","totalPages","page","getVisiblePages","total","changePage","bind","state","pages","nextProps","this","setState","onPageChange","activePage","Pagination","size","listClassName","aria-label","PaginationItem","PaginationLink","onClick","disabled","array","React","Component","dataTableColumns","Header","accessor","Cell","value","title","SiteListTableCard","data","loading","annyang","commands","term","console","log","getSiteList","pageNumber","pageSize","addCommands","debug","start","abort","items","Card","CardBody","CardTitle","IntlMessages","Math","ceil","totalCount","columns","defaultPageSize","showPageJump","PaginationComponent","showPageSizeOptions","manual","onFetchData","instance","connect","undefined","siteAudit","siteList","SiteList","onChange","file","FormData","append","uploadCSV","Row","xxs","Breadcrumb"],"mappings":"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","file":"static/js/32.f727e401.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport IntlMessages from \"../../helpers/IntlMessages\";\n\nconst getMenuTitle = sub => {\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub, index) => {\n  if (index === 0) {\n    return \"\";\n  } else {\n    return path.split(sub)[0] + sub;\n  }\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <Fragment>\n      {heading && <h1><IntlMessages id={heading}/></h1>}\n      <BreadcrumbItems match={match} />\n    </Fragment>\n  );\n};\n\nexport const BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split(\"/\");\n  if (paths[paths.length - 1].indexOf(\":\") > -1) {\n    paths = paths.filter(x => x.indexOf(\":\") === -1);\n  }\n  return (\n    <Fragment>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={\"/\" + getUrl(path, sub, index)}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </Fragment>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n    Pagination, PaginationItem, PaginationLink,\n} from \"reactstrap\";\n\n\nexport default class CustomPagination extends React.Component {\n    constructor(props) {\n        super();\n\n        this.changePage = this.changePage.bind(this);\n\n        this.state = {\n            visiblePages: this.getVisiblePages(null, props.pages)\n        };\n    }\n\n    static propTypes = {\n        pages: PropTypes.number,\n        page: PropTypes.number,\n        PageButtonComponent: PropTypes.any,\n        onPageChange: PropTypes.func,\n        previousText: PropTypes.string,\n        nextText: PropTypes.string\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.pages !== nextProps.pages) {\n            this.setState({\n                visiblePages: this.getVisiblePages(null, nextProps.pages)\n            });\n        }\n\n        this.changePage(nextProps.page + 1);\n    }\n\n    filterPages = (visiblePages, totalPages) => {\n        return visiblePages.filter(page => page <= totalPages);\n    };\n\n    getVisiblePages = (page, total) => {\n        if (total < 7) {\n            return this.filterPages([1, 2, 3, 4, 5, 6], total);\n        } else {\n            if (page % 5 >= 0 && page > 4 && page + 2 < total) {\n                return [1, page - 1, page, page + 1, total];\n            } else if (page % 5 >= 0 && page > 4 && page + 2 >= total) {\n                return [1, total - 3, total - 2, total - 1, total];\n            } else {\n                return [1, 2, 3, 4, 5, total];\n            }\n        }\n    };\n\n    changePage(page) {\n        const activePage = this.props.page + 1;\n\n        if (page === activePage) {\n            return;\n        }\n\n        const visiblePages = this.getVisiblePages(page, this.props.pages);\n\n        this.setState({\n            visiblePages: this.filterPages(visiblePages, this.props.pages)\n        });\n\n        this.props.onPageChange(page - 1);\n    }\n\n    render() {\n        const { visiblePages } = this.state;\n        const activePage = this.props.page + 1;\n\n        return (\n            <Pagination className=\"d-inline-block\" size=\"sm\" listClassName=\"justify-content-center\" aria-label=\"Page navigation example\">\n\n                <PaginationItem className={`${activePage === 1 && \"disabled\"}`}>\n                    <PaginationLink\n                        className={\"prev\"}\n                        onClick={() => {\n                            if (activePage === 1) return;\n                            this.changePage(activePage - 1);\n                        }}\n                        disabled={activePage === 1}>\n                        <i className=\"simple-icon-arrow-left\" />\n                    </PaginationLink>\n\n                </PaginationItem>\n\n\n                {visiblePages.map((page, index, array) => {\n                    return (\n                        <PaginationItem\n                            key={page}\n                            active={activePage === page ? true : false}\n                        >\n                            <PaginationLink\n                                onClick={this.changePage.bind(null, page)}\n                            >\n                                {array[index - 1] + 2 < page ? `...${page}` : page}\n                            </PaginationLink>\n\n                        </PaginationItem>\n                    );\n                })}\n\n                <PaginationItem className={`${activePage === this.props.pages && \"disabled\"}`}>\n                    <PaginationLink\n                        className={\"next\"}\n                        onClick={() => {\n                            if (activePage === this.props.pages) return;\n                            this.changePage(activePage + 1);\n                        }}\n                        disabled={activePage === this.props.pages}>\n                        <i className=\"simple-icon-arrow-right\" />\n                    </PaginationLink>\n\n                </PaginationItem>\n\n            </Pagination>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { Card, CardBody, CardTitle } from \"reactstrap\";\nimport ReactTable from \"react-table\";\nimport { connect } from \"react-redux\";\nimport annyang from \"annyang\";\nimport { NavLink } from \"react-router-dom\";\n\nimport IntlMessages from \"../../helpers/IntlMessages\";\nimport CustomPagination from \"../../components/CustomPagination\";\nimport { getSiteList } from \"../../redux/actions\";\n\nconst dataTableColumns = [\n  {\n    Header: \"Site Code\",\n    accessor: \"siteCode\",\n    Cell: props => <p className=\"list-item-heading\">{props.value}</p>\n  },\n  {\n    Header: \"Site Name\",\n    accessor: \"siteName\",\n    Cell: props => <p className=\"text-muted\">{props.value}</p>\n  },\n  {\n    Header: \"Latitude\",\n    accessor: \"latitude\",\n    Cell: props => <p className=\"text-muted\">{props.value}</p>\n  },\n  {\n    Header: \"Longitude\",\n    accessor: \"longitude\",\n    Cell: props => <p className=\"text-muted\">{props.value}</p>\n  },\n  {\n    Header: \"City\",\n    accessor: \"city\",\n    Cell: props => <p className=\"text-muted\">{props.value}</p>\n  },\n  {\n    Header: \"State\",\n    accessor: \"state\",\n    Cell: props => <p className=\"text-muted\">{props.value}</p>\n  },\n  {\n    Header: \"Zip\",\n    accessor: \"zip\",\n    Cell: props => <p className=\"text-muted\">{props.value}</p>\n  },\n  {\n    Header: \"County\",\n    accessor: \"county\",\n    Cell: props => <p className=\"text-muted\">{props.value}</p>\n  },\n  {\n    Header: \"Actions\",\n    accessor: \"_id\",\n    Cell: props => <NavLink to={`/app/site/site-detail/` + props.value} className=\"white\">\n      <div className={\"glyph-icon simple-icon-eye\"} title=\"View Site\" />\n  </NavLink>\n  },\n];\n\nclass SiteListTableCard extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      data: [],\n      loading: false,\n      page: 0\n    }\n  }\n\n  componentDidMount() {\n\n    if (annyang) {\n\n      const commands = {\n        'show me *term': (term) => {\n          console.log('annyang: ' + term);\n          this.props.getSiteList({\n            pageNumber: this.props.data.pageNumber,\n            pageSize: this.props.data.pageSize,\n            filter: term\n          });\n        }\n      };\n\n      annyang.addCommands(commands);\n      annyang.debug(true);\n      annyang.start();\n\n    }\n  }\n\n  componentWillMount() {\n    annyang.abort();\n  }\n\n  render() {\n\n    const data = this.props.data.items;\n    const filter = this.props.data.filter;\n\n    return (\n      <Card className=\"mb-4\">\n        <CardBody>\n          <CardTitle>\n            <IntlMessages id=\"table.site-list\" />\n          </CardTitle>\n          <div>\n          To search something, please say \"Show me ...\" . To show all data, please say \"Show me all\". Search Text : {filter}\n          </div>\n          <ReactTable\n            data={data}\n            pages={Math.ceil(this.props.data.totalCount / this.props.data.pageSize)}\n            columns={dataTableColumns}\n            defaultPageSize={10}\n            showPageJump={true}\n            PaginationComponent={CustomPagination}\n            showPageSizeOptions={true}\n            loading={this.state.loading}\n            manual\n            onFetchData={(state, instance) => {\n              this.props.getSiteList({\n                pageNumber: state.page,\n                pageSize: state.pageSize,\n                filter: filter\n              });\n            }}\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return ({\n    data: state.siteAudit.siteList.data === undefined ? { items: [], totalCount: 0 } : state.siteAudit.siteList.data\n  });\n};\n\nexport default connect(\n  mapStateToProps,\n  { getSiteList }\n)(SiteListTableCard);","import React, { Component, Fragment } from \"react\";\nimport { Row } from \"reactstrap\";\n\nimport { Colxx, Separator } from \"../../../components/common/CustomBootstrap\";\nimport Breadcrumb from \"../../../containers/navs/Breadcrumb\";\nimport SiteListTableCard from \"../../../containers/ui/SiteListTableCards\";\n\nexport default class SiteList extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange = file => {\n\n        const data = new FormData();\n        data.append('file', file);\n        this.props.uploadCSV(data);\n        console.log(file);\n\n    }\n\n\n    render() {\n        return (\n            <Fragment>\n                <Row>\n                    <Colxx xxs=\"12\">\n                        <Breadcrumb heading=\"menu.site-list\" match={this.props.match} />\n                        <Separator className=\"mb-5\" />\n                    </Colxx>\n                </Row>\n                <Row>\n                    <Colxx xxs=\"12\">\n                        <SiteListTableCard />\n                    </Colxx>\n                </Row>\n            </Fragment >\n        )\n    }\n}\n"],"sourceRoot":""}